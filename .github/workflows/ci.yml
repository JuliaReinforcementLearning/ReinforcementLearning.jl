name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
        python-version:
          - '3.8'
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - run: python -m pip install --user gym matplotlib 
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - run: |
          julia --color=yes -e '
            using Pkg;
            Pkg.develop(path="src/ReinforcementLearningBase")
            Pkg.develop(path="src/ReinforcementLearningCore")
            Pkg.develop(path="src/ReinforcementLearningEnvironments")
            Pkg.develop(path="src/ReinforcementLearningZoo")
            Pkg.develop(path=".")
            Pkg.develop(path="src/ReinforcementLearningExperiments")
            Pkg.build("ReinforcementLearningExperiments")
            Pkg.test("ReinforcementLearningBase")
            Pkg.test("ReinforcementLearningCore")
            Pkg.test("ReinforcementLearningEnvironments")
            Pkg.test("ReinforcementLearningZoo")
            Pkg.test("ReinforcementLearning")
            Pkg.test("ReinforcementLearningExperiments")'
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Build homepage
        run: |
          cd docs/homepage
          julia --project --color=yes -e '
            using Pkg; Pkg.instantiate();
            using NodeJS; run(`$(npm_cmd()) install highlight.js`);
            using Franklin;
            optimize()' > build.log

    # - name: Make sure homepage is generated without error
    #   run: |
    #     if grep -1 "Franklin Warning" build.log; then
    #       echo "Franklin reported a warning"
    #       exit 1
    #     else
    #       echo "Franklin did not report a warning"
    #     fi

      - name: Build docs
        run: |
          cd docs
          julia --project --color=yes -e '
            using Pkg; Pkg.instantiate();
            include("make.jl")'
          mv build homepage/__site/docs

      - name: Deploy to the main repo
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name == 'push' }}
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: JuliaReinforcementLearning/JuliaReinforcementLearning.github.io
          force_orphan: true
          publish_branch: master
          publish_dir: ./docs/homepage/__site